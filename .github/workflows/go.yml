name: TestBuildRelease

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Test
      run: go test ./...

    - name: Build
      run: go build -o standup ./src

    - name: Build for macOS
      run: |
        GOOS=darwin GOARCH=amd64 go build -o dist/standup-macos ./src

    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -o dist/standup-windows.exe ./src

    - name: Create Binary
      run: |
        mkdir -p dist
        mv standup dist/standup
        echo "Binary created in the dist/ directory"

    - name: Upload Binary as Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: standup-binary
        path: dist/standup

    - name: Upload macOS Binary as Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: standup-binary-macos
        path: dist/standup-macos

    - name: Upload Windows Binary as Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: standup-binary-windows
        path: dist/standup-windows.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Download Binary Artifact
      uses: actions/download-artifact@v4.3.0
      with:
        name: standup-binary
        path: dist

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}-${{ github.run_id }}
        release_name: Release ${{ github.ref_name }}-${{ github.run_id }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/standup
        asset_name: standup
        asset_content_type: application/octet-stream


